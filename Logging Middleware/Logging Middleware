import { useState, useEffect, createContext, useContext } from "react";
import { BrowserRouter as Router, Routes, Route, Navigate } from "react-router-dom";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { Toaster, toast } from "sonner";
import { Button } from "@/components/ui/button";
const AuthContext = createContext(null);
const useAuth = () => useContext(AuthContext);
function AuthProvider({ children }) {
  const [user, setUser] = useState(() => {
    const stored = localStorage.getItem("user");
    return stored ? JSON.parse(stored) : null;
  });

  const login = (data) => {
    localStorage.setItem("user", JSON.stringify(data));
    setUser(data);
  };

  const logout = () => {
    localStorage.removeItem("user");
    setUser(null);
  };

  return (
    <AuthContext.Provider value={{ user, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
}


function ProtectedRoute({ children }) {
  const { user } = useAuth();
  if (!user) return <Navigate to="/login" replace />;
  return children;
}


function Landing() {
  return (
    <div className="p-8 text-center">
      <h1 className="text-3xl font-bold mb-4">Welcome to the App ðŸš€</h1>
      <p className="mb-6">Responsive, production-ready React front-end.</p>
      <Button onClick={() => toast("Hello World!", { description: "This is a toast." })}>
        Show Toast
      </Button>
    </div>
  );
}

function Login() {
  const { login } = useAuth();
  const handleLogin = () => {
    login({ id: "1", name: "John Doe", email: "john@example.com", role: "user" });
  };
  return (
    <div className="p-8 text-center">
      <h2 className="text-xl font-semibold mb-4">Login</h2>
      <Button onClick={handleLogin}>Login as Demo User</Button>
    </div>
  );
}

function Dashboard() {
  const { user, logout } = useAuth();
  return (
    <div className="p-8">
      <h2 className="text-2xl font-bold mb-2">Dashboard</h2>
      <p className="mb-4">Welcome, {user?.name}</p>
      <Button onClick={logout}>Logout</Button>
    </div>
  );
}

function NotFound() {
  return <h2 className="p-8 text-center text-red-600">404 - Page Not Found</h2>;
}
const queryClient = new QueryClient();
export default function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <AuthProvider>
        <Router>
          <Routes>
            <Route path="/" element={<Landing />} />
            <Route path="/login" element={<Login />} />

            <Route
              path="/dashboard"
              element={
                <ProtectedRoute>
                  <Dashboard />
                </ProtectedRoute>
              }
            />

            <Route path="*" element={<NotFound />} />
          </Routes>
        </Router>
        <Toaster richColors />
      </AuthProvider>
    </QueryClientProvider>
  );
}

